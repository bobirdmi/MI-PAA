====== Zpráva k 5. úloze ======
===== Specifikace =====
==== Úloha ====
Lze přečíst [[homeworks:05:start|zde]].

==== Hardware & Software ====
Notebook s:
  * Hardware
    * Windows 8.1 64-bit
    * Intel Core i7-3630QM 
    * 8GB RAM
  * Software
    * Jupyter Notebook s python 3.5
    * vlastní modul [[https://github.com/bobirdmi/genetic-algorithms|geneticalgs]]

==== Použitý modul ====
V dané praci byl využít vlastní pythonní modul [[https://github.com/bobirdmi/genetic-algorithms|geneticalgs]] verze **1.0**.

===== Zkušební instance =====
**Řešitelné** zkušební instance (uf*) byly převzaty z [[http://www.cs.ubc.ca/~hoos/SATLIB/benchm.html|]], jejich váhy byly náhodně vygenerovany. Tyto instance byly zdola ořiznuty, aby poměr //počet klauzulí k počtu proměnným// byl roven 4.

===== Měření "výkonu" zvolené sady parametrů =====
"Výkon" aktuálně testované sady parametrů je vypočítán podle počtu **různých** nalezených řešení //F(Y)=1//. Jelikož se jedná o nedeterministický algoritmus, bude spočítán **průměr** tohoto počtu na základě 10 měřění (větší počet měření by byl příliš časově náročný).

===== Nastavení parametrů =====
Genetické algoritmy (GA) jsou velmi závislé na definovaném problému a dokonce i na instancích příslušných danému problému. Proto je nutné správně přizpůsobit parametry GA zvolenému problému **3SAT**. Tedy musíme experimentálním způsobem stanovit následující parametry:
  * druh selekce rodičů
  * velikost počateční populace
  * druh a pravděpodobnost mutace
  * druh a pravděpodobnost křížení

Některé parametry jako //elitismus// a //minimalizace/maximalizace fitness// lze stanovit i bez dalších experimentů (v případě druhu optimalizace to záleží na přístupu k řešení). //Elitismus// bude **stále zapnutý**, jelikož ovlivňuje pouze rychlost konvergence, nic víc.

Pro potřeby experimentů defaultní hodnoty parametrů byly zafixované na následující hodnoty:
  * selekce = //rank//
  * pravděpodobnost mutace = 0%
  * druh mutace = jednobodová
  * pravděpodobnost křížení = 100%
  * druh křížení = jednobodové
  * počet generací = 20
  * velikost počateční populace = 1000

==== Optimalizační kritérium ====
GA se bude snažit **maximalizovat** počet splněných klauzulí (optimální počet klauzulí je fixní), a když nějaké řešení dosáhne optima, k jeho hodnotě //fitness// (optimální počet klauzulí) se připočte celková váha tohoto řešení. Toutou fintou docilíme toho, že GA stále hledá řešení //F(Y)=1//, ale také již nalezená řešení navzájem soupeří podle svých váh.

==== Druh selekce rodičů ====
Aktuální implementace použitého modulu poskytuje 3 druhy selekce rodičů: //roulette wheel selection//, //rank wheel selection// a //tournament//. První druh není avšak moc užitečný, jelikož pravděpodobnost výběru rodiče je přímo úměrná hodnotě jeho //fitness//, což způsobuje rychlou konvergenci, ale za cenu ztráty divergence.

Musíme tedy rozhodnout o teprve dvou druhů: //rank wheel selection// (stručně //rank//) a //tournament//.

==== Velikost počateční populace ====
TODO

==== Mutace ====
=== Pravděpodobnost mutace ===
Doporučená pravděpodobnost mutace je 0.5-1% (Beasley, 1993). Podle tohoto doporučení a selského rozumu vyplývá, že má smysl pouze testování malé pravděpodobnosti mutace, protože s větší pravděpodobností přichází úplná náhodnost algoritmu.

Pro testování použijeme následující pravděpodobnosti: 1%, 5%, 10%, 15%, 20%. Tabulka níže obsahuje průměrný počet různých nalezených řešení pro každou testovanou hodnotu. Tučně jsou označeny nejlepší výsledky.

^  # generací = 20  ^^^^^^^
|  ^  1%  ^  5%  ^  10%  ^  15%  ^  20%  ^
^ # řešení |  **1.9**  |  0.8  |  1.0  |  **2.9**  |  1.2  |

Pro ověření a upřesnění otestujeme hodnoty kolem těchto výsledků

^  # generací = 20  ^^^^^^^
|  |  0.8%  |  1%  |  1.2%  |  13%  |  15%  |  17%  |
^ # řešení |  1.2  |  **6.3**  |  0.8  |  0.2  |  **2.9**  |  **3.0**  |

Dostali jsme nové potenciální hodnoty, proto spustíme algoritmus ještě jednou

^  # generací = 20  ^^^^^^^
|  ^  1%  ^  15%  ^  16%  ^  17%  ^  18%  ^
^ # řešení |  **4.4**  |  0.3  |  0.4  |  1.5  |  **2.0**  |

Z výsledků lze odvodit, že **nejlepší pravděpodobnost mutace je 1%**.

=== Druh mutace ===
Druh mutace určuje kolik náhodných bitů bude s danou pravděpodobností invertovány. Zase jako v případě pravděpodobnosti mutace má smysl testování pouze malých hodnot. Otestujeme následující hodnoty: 1, 2, 4, 6, 8, 10.

^  # generací = 20  ^^^^^^^
|  ^  1  ^  2  ^  4  ^  6  ^  8  ^  10  ^
^ # řešení |    |    |    |    |    |    |

==== Křížení ====
=== Druh křížení ===
TODO

=== Pravděpodobnost křížení ===
Doporučená pravděpodobnost křížení je 80-95% (Beasley, 1993).

===== Výsledné optimální parametry =====
TODO

===== Výsledky =====
TODO

===== Závěr =====
TODO 